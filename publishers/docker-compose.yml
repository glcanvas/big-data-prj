version: '2'
services:
  mongo:
    image: mongo
    container_name: mongo
    hostname: mongo
    environment:
      - PUID=1000
      - PGID=1000
    volumes:
      - /Users/nduginets/mongodb:/data/db
    ports:
      - 27017:27017
    restart: unless-stopped

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    hostname: kafka
    ports:
      - "9092:9092"
    environment:
      DOCKER_API_VERSION: 1.22
      KAFKA_CREATE_TOPICS: "t1:1:1"
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  loader:
    image: app:1
    container_name: app_loader
    environment:
      APP_NAME: loader
      VK_KEY: 8b34623d8b34623d8b34623d128b595d3788b348b34623deb51e7e4149c9e0837beb45a
      KAFKA_ADDRESS: kafka:9092
    restart: unless-stopped

  my_app_cron:
    image: app:1
    container_name: my_app_cron
    environment:
      APP_NAME: cron
      VK_KEY: 8b34623d8b34623d8b34623d128b595d3788b348b34623deb51e7e4149c9e0837beb45a
      KAFKA_ADDRESS: kafka:9092
      MONGO_HOST: mongo
      MONGO_PORT: 27017
    restart: unless-stopped

  #saver:
  #  image: app:1
  #  container_name: app_saver
  #  environment:
  #    - APP_NAME=saver
  #    - KAFKA_ADDRESS=localhost:9092
  #    - MONGO_HOST=localhost
  #    - MONGO_PORT=27017
  #  restart: unless-stopped
