/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package big.data.prj

import com.mongodb.BasicDBObject
import com.mongodb.MongoClient

import de.flapdoodle.embed.mongo.MongodExecutable;
import de.flapdoodle.embed.mongo.MongodProcess;
import de.flapdoodle.embed.mongo.MongodStarter;
import de.flapdoodle.embed.mongo.config.IMongodConfig;
import de.flapdoodle.embed.mongo.config.MongodConfigBuilder;
import de.flapdoodle.embed.mongo.config.Net;
import de.flapdoodle.embed.mongo.distribution.Version;
import de.flapdoodle.embed.process.runtime.Network;
import java.util.*

class AppTest {

}


fun main() {
    val starter: MongodStarter = MongodStarter.getDefaultInstance()

    val port: Int = Network.getFreeServerPort()
    val mongodConfig = MongodConfigBuilder()
            .version(Version.Main.PRODUCTION)
            .net(Net(port, Network.localhostIsIPv6()))
            .build()

    var mongodExecutable: MongodExecutable? = null
    try {
        mongodExecutable = starter.prepare(mongodConfig)
        val mongod: MongodProcess = mongodExecutable.start()
        MongoClient("localhost", port).use { mongo ->
            val db = mongo.getDB("test")
            val col = db.createCollection("testCol", BasicDBObject())
            col.save(BasicDBObject("testDoc", Date()))
        }
    } finally {
        if (mongodExecutable != null) mongodExecutable.stop()
    }
}